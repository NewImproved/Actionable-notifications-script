##############################################################################
# Actionable Notification Script
##############################################################################
#
# USERS CONFIGURATION
# ------------------
# Add new users by adding to the input_select and template sensor sections below
#
# NOTIFICATION PARAMETERS
# ----------------------
# who: Recipient selection - user name or 'all' (default: 'all')
# title: Notification title 
# message: Notification message content
# url: URL to open when notification is tapped (optional)
#
# ACTION BUTTONS
# -------------
# show_confirm: Show confirm button - 'true' or 'false' (default: false)
# show_dismiss: Show dismiss button - 'true' or 'false' (default: false)
# show_snooze: Show snooze button - 'true' or 'false' (default: false)
# confirm_text: Text for confirm button (default: 'Yes')
# dismiss_text: Text for dismiss button (default: 'No')
# snooze_text: Text for snooze button (default: 'Snooze')
#
# BUTTON ACTIONS
# -------------
# action_confirm_action: Service to call when 'confirm' is tapped (default: 'script.no_action')
# action_confirm_entity_id: Entity ID for confirm action (default: 'input_boolean.default')
# action_dismiss_action: Service to call when 'dismiss' is tapped (default: 'script.no_action')
# action_dismiss_entity_id: Entity ID for dismiss action (default: 'input_boolean.default')
# action_snooze_action: Service to call when 'snooze' is tapped (default: 'script.no_action')
# action_snooze_entity_id: Entity ID for snooze action (default: 'input_boolean.default')
#
# TIMEOUT SETTINGS
# --------------
# timeout_minutes: Minutes to wait for response (default: 5)
# enable_timeout: Enable timeout - 'true' or 'false' (default: true)
# timeout_action: Service to call on timeout (default: 'script.no_action')
# timeout_entity_id: Entity ID for timeout action (default: 'input_boolean.default')
#
# RESEND SETTINGS
# --------------
# resend_count: Number of times to resend after timeout (default: 0)
# resend_interval: Minutes between resends (default: 2)
#
# MESSAGES
# -------
# action_taken_title: Title when someone else responds (default: 'Action Taken')
# action_taken_message: Message when someone else responds (default: 'Another user has already responded.')
# timeout_title: Title for timeout notification (default: 'No Response')
# timeout_message: Message for timeout (default: 'No response received. Fallback action performed.')
#
# ATTACHMENTS
# ----------
# group: Notification group identifier (default: 'actionable_notify')
# image: URL to an image (optional)
# entity_id: Entity ID to attach (optional)
#
##############################################################################

# User Configuration
input_select:
  notification_users:
    name: "Notification Users"
    options:
      - joakim
      - caroline
      # Add new users here
      # - username

# User Device Sensors
template:
  - sensor:
      - name: "Mobile Device Map"
        state: "{{ 'Available' }}"
        attributes:
          joakim: "{{ state_attr('person.joakim_aven','source').replace('device_tracker.','notify.mobile_app_') }}"
          caroline: "{{ state_attr('person.caroline','source').replace('device_tracker.','notify.mobile_app_') }}"
          # Add new users here
          # username: "{{ state_attr('person.username','source').replace('device_tracker.','notify.mobile_app_') }}"

# Main Script
script:
  actionable_notify:
    alias: "Actionable Notification Script"
    mode: parallel
    fields:
      who:
        name: Recipients
        description: Who should receive the notification
        selector:
          select:
            options:
              - all
              - joakim
              - caroline
              # Add new users here
              # - username
            mode: dropdown
      title:
        name: Title
        description: Notification title
        required: true
        selector:
          text:
      message:
        name: Message
        description: Notification message
        required: true
        selector:
          text:
            multiline: true
      url:
        name: URL
        description: URL to open when tapped (optional)
        selector:
          text:
      show_confirm:
        name: Show Confirm Button
        description: Show the confirm button
        default: false
        selector:
          boolean:
      show_dismiss:
        name: Show Dismiss Button
        description: Show the dismiss button
        default: false
        selector:
          boolean:
      show_snooze:
        name: Show Snooze Button
        description: Show the snooze button
        default: false
        selector:
          boolean:
      confirm_text:
        name: Confirm Button Text
        description: Text for confirm button
        default: "Yes"
        selector:
          text:
      dismiss_text:
        name: Dismiss Button Text
        description: Text for dismiss button
        default: "No"
        selector:
          text:
      snooze_text:
        name: Snooze Button Text
        description: Text for snooze button
        default: "Snooze"
        selector:
          text:
      action_confirm_action:
        name: Confirm Action
        description: Service to call when confirmed
        default: "script.no_action"
        selector:
          text:
      action_confirm_entity_id:
        name: Confirm Entity ID
        description: Entity ID for confirm action
        default: "input_boolean.default"
        selector:
          entity:
      action_dismiss_action:
        name: Dismiss Action
        description: Service to call when dismissed
        default: "script.no_action"
        selector:
          text:
      action_dismiss_entity_id:
        name: Dismiss Entity ID
        description: Entity ID for dismiss action
        default: "input_boolean.default"
        selector:
          entity:
      action_snooze_action:
        name: Snooze Action
        description: Service to call when snoozed
        default: "script.no_action"
        selector:
          text:
      action_snooze_entity_id:
        name: Snooze Entity ID
        description: Entity ID for snooze action
        default: "input_boolean.default"
        selector:
          entity:
      timeout_minutes:
        name: Timeout Minutes
        description: Wait time for response
        default: 5
        selector:
          number:
            min: 1
            max: 60
            step: 1
      enable_timeout:
        name: Enable Timeout
        description: Enable timeout functionality
        default: true
        selector:
          boolean:
      timeout_action:
        name: Timeout Action
        description: Service to call on timeout
        default: "script.no_action"
        selector:
          text:
      timeout_entity_id:
        name: Timeout Entity ID
        description: Entity ID for timeout action
        default: "input_boolean.default"
        selector:
          entity:
      resend_count:
        name: Resend Count
        description: Number of resend attempts
        default: 0
        selector:
          number:
            min: 0
            max: 10
            step: 1
      resend_interval:
        name: Resend Interval
        description: Minutes between resends
        default: 2
        selector:
          number:
            min: 1
            max: 60
            step: 1
      group:
        name: Group
        description: Notification group id
        default: "actionable_notify"
        selector:
          text:
      image:
        name: Image
        description: Image URL (optional)
        selector:
          text:
      entity_id:
        name: Attached Entity
        description: Entity to attach (optional)
        selector:
          entity:
    sequence:
      - alias: "Set up variables"
        variables:
          # Recipients
          who: "{{ who | default('all') }}"

          # Action Identifiers
          action_id: "{{ context.id }}"
          
          # Action Flags
          show_confirm: "{{ show_confirm | default(false) }}"
          show_dismiss: "{{ show_dismiss | default(false) }}"
          show_snooze: "{{ show_snooze | default(false) }}"

          # Timeout Settings
          timeout_minutes: "{{ timeout_minutes | default(5) | float }}"
          enable_timeout: "{{ enable_timeout | default(true) }}"
          timeout_action: "{{ timeout_action | default('script.no_action') }}"
          timeout_entity_id: "{{ timeout_entity_id | default('input_boolean.default') }}"
          resend_count: "{{ resend_count | default(0) }}"
          resend_interval: "{{ resend_interval | default(2) }}"

          # Messages
          title: "{{ title | default('Notification') }}"
          message: "{{ message | default('New notification') }}"
          action_taken_title: "{{ action_taken_title | default('Action Taken') }}"
          action_taken_message: "{{ action_taken_message | default('Another user has already responded.') }}"
          timeout_title: "{{ timeout_title | default('No Response') }}"
          timeout_message: "{{ timeout_message | default('No response received. Fallback action performed.') }}"

          # Actions
          group: "{{ group | default('actionable_notify') }}"
          action_confirm_action: "{{ action_confirm_action | default('script.no_action') }}"
          action_confirm_entity_id: "{{ action_confirm_entity_id | default('input_boolean.default') }}"
          action_dismiss_action: "{{ action_dismiss_action | default('script.no_action') }}"
          action_dismiss_entity_id: "{{ action_dismiss_entity_id | default('input_boolean.default') }}"
          action_snooze_action: "{{ action_snooze_action | default('script.no_action') }}"
          action_snooze_entity_id: "{{ action_snooze_entity_id | default('input_boolean.default') }}"

          # Button Text
          confirm_text: "{{ confirm_text | default('Yes') }}"
          dismiss_text: "{{ dismiss_text | default('No') }}"
          snooze_text: "{{ snooze_text | default('Snooze') }}"

          # Attachments
          url: "{{ url | default('') }}"
          image: "{{ image | default('') }}"
          entity_id: "{{ entity_id | default('') }}"

      - alias: "Identify recipients"
        variables:
          recipient_list: >-
            {% set user_list = [] %}
            {% set all_users = states('input_select.notification_users').split(',') %}
            {% set device_map = state_attr('sensor.mobile_device_map', '') %}
            
            {% if who == 'all' %}
              {% for user in all_users %}
                {% set user_device = state_attr('sensor.mobile_device_map', user) %}
                {% if user_device is defined and user_device != '' %}
                  {% set user_list = user_list + [{'name': user, 'service': user_device}] %}
                {% endif %}
              {% endfor %}
            {% else %}
              {% set user_device = state_attr('sensor.mobile_device_map', who) %}
              {% if user_device is defined and user_device != '' %}
                {% set user_list = user_list + [{'name': who, 'service': user_device}] %}
              {% endif %}
            {% endif %}
            
            {{ user_list | tojson }}

      - alias: "Send notifications"
        repeat:
          for_each: "{{ recipient_list }}"
          sequence:
            - service: "{{ repeat.item.service }}"
              data:
                title: "{{ title }}"
                message: "{{ message }}"
                data:
                  tag: "{{ group }}"
                  url: "{{ url }}"
                  clickAction: "{{ url }}"
                  group: "{{ group }}"
                  image: "{{ image }}"
                  entity_id: "{{ entity_id }}"
                  actions: >-
                    {% set actions = [] %}
                    {% if show_confirm %}
                      {% set actions = actions + [{'action': 'CONFIRM_' ~ repeat.item.name ~ '_' ~ action_id, 'title': confirm_text}] %}
                    {% endif %}
                    {% if show_dismiss %}
                      {% set actions = actions + [{'action': 'DISMISS_' ~ repeat.item.name ~ '_' ~ action_id, 'title': dismiss_text}] %}
                    {% endif %}
                    {% if show_snooze %}
                      {% set actions = actions + [{'action': 'SNOOZE_' ~ repeat.item.name ~ '_' ~ action_id, 'title': snooze_text}] %}
                    {% endif %}
                    {{ actions }}
              continue_on_error: true

      - alias: "Wait for response"
        variables:
          wait_triggers: >-
            {% set triggers = [] %}
            {% for user in recipient_list %}
              {% if show_confirm %}
                {% set triggers = triggers + [{'platform': 'event', 'event_type': 'mobile_app_notification_action', 'event_data': {'action': 'CONFIRM_' ~ user.name ~ '_' ~ action_id}}] %}
              {% endif %}
              {% if show_dismiss %}
                {% set triggers = triggers + [{'platform': 'event', 'event_type': 'mobile_app_notification_action', 'event_data': {'action': 'DISMISS_' ~ user.name ~ '_' ~ action_id}}] %}
              {% endif %}
              {% if show_snooze %}
                {% set triggers = triggers + [{'platform': 'event', 'event_type': 'mobile_app_notification_action', 'event_data': {'action': 'SNOOZE_' ~ user.name ~ '_' ~ action_id}}] %}
              {% endif %}
            {% endfor %}
            {{ triggers }}
        wait_for_trigger: "{{ wait_triggers }}"
        timeout:
          minutes: "{{ timeout_minutes }}"
        continue_on_timeout: true

      - alias: "Process response"
        variables:
          response_action: "{{ wait.trigger.event.data.action if wait.trigger is not none else 'none' }}"
          action_type: >-
            {% if 'CONFIRM_' in response_action %}
              confirm
            {% elif 'DISMISS_' in response_action %}
              dismiss
            {% elif 'SNOOZE_' in response_action %}
              snooze
            {% else %}
              none
            {% endif %}
          responding_user: >-
            {% set parts = response_action.split('_') %}
            {% if parts|length >= 2 %}
              {{ parts[1] }}
            {% else %}
              none
            {% endif %}

      - alias: "Execute action based on response"
        choose:
          - conditions:
              - condition: template
                value_template: "{{ action_type == 'confirm' }}"
            sequence:
              - service: "{{ action_confirm_action }}"
                target:
                  entity_id: "{{ action_confirm_entity_id }}"
          - conditions:
              - condition: template
                value_template: "{{ action_type == 'dismiss' }}"
            sequence:
              - service: "{{ action_dismiss_action }}"
                target:
                  entity_id: "{{ action_dismiss_entity_id }}"
          - conditions:
              - condition: template
                value_template: "{{ action_type == 'snooze' }}"
            sequence:
              - service: "{{ action_snooze_action }}"
                target:
                  entity_id: "{{ action_snooze_entity_id }}"

      - alias: "Clear notifications and notify others about action"
        if:
          - condition: template
            value_template: "{{ action_type != 'none' }}"
        then:
          repeat:
            for_each: "{{ recipient_list }}"
            sequence:
              - service: "{{ repeat.item.service }}"
                data:
                  message: "clear_notification"
                  data:
                    tag: "{{ group }}"
                continue_on_error: true
              
              - if:
                  - condition: template
                    value_template: "{{ repeat.item.name != responding_user }}"
                then:
                  - service: "{{ repeat.item.service }}"
                    data:
                      title: "{{ action_taken_title }}"
                      message: "{{ action_taken_message }}"
                      data:
                        tag: "{{ group }}_taken"
                    continue_on_error: true

      - alias: "Handle timeout"
        if:
          - condition: template
            value_template: "{{ action_type == 'none' and enable_timeout }}"
        then:
          - service: "{{ timeout_action }}"
            target:
              entity_id: "{{ timeout_entity_id }}"
            continue_on_error: true
          
          - repeat:
              for_each: "{{ recipient_list }}"
              sequence:
                - service: "{{ repeat.item.service }}"
                  data:
                    title: "{{ timeout_title }}"
                    message: "{{ timeout_message }}"
                    data:
                      tag: "{{ group }}_timeout"
                  continue_on_error: true

      - alias: "Handle resends"
        if:
          - condition: template
            value_template: "{{ action_type == 'none' and resend_count > 0 }}"
        then:
          - repeat:
              count: "{{ resend_count }}"
              sequence:
                - delay:
                    minutes: "{{ resend_interval }}"
                - repeat:
                    for_each: "{{ recipient_list }}"
                    sequence:
                      - service: "{{ repeat.item.service }}"
                        data:
                          title: "{{ title }} (Resend {{ repeat.index }})"
                          message: "{{ message }}"
                          data:
                            tag: "{{ group }}_resend_{{ repeat.index }}"
                            url: "{{ url }}"
                            clickAction: "{{ url }}"
                            group: "{{ group }}"
                            actions: >-
                              {% set actions = [] %}
                              {% if show_confirm %}
                                {% set actions = actions + [{'action': 'CONFIRM_' ~ repeat.item.name ~ '_' ~ action_id ~ '_RESEND' ~ repeat.index, 'title': confirm_text}] %}
                              {% endif %}
                              {% if show_dismiss %}
                                {% set actions = actions + [{'action': 'DISMISS_' ~ repeat.item.name ~ '_' ~ action_id ~ '_RESEND' ~ repeat.index, 'title': dismiss_text}] %}
                              {% endif %}
                              {% if show_snooze %}
                                {% set actions = actions + [{'action': 'SNOOZE_' ~ repeat.item.name ~ '_' ~ action_id ~ '_RESEND' ~ repeat.index, 'title': snooze_text}] %}
                              {% endif %}
                              {{ actions }}
                        continue_on_error: true

  no_action:
    alias: "No Action Script"
    sequence:
      - delay:
          seconds: 0

##############################################################################
# EXAMPLE USAGE
##############################################################################
# Example 1: Front door alert
# service: script.actionable_notify
# data:
#   title: Front Door Alert
#   message: Someone is at the front door. Unlock the door?
#   show_confirm: true
#   show_dismiss: true
#   confirm_text: Unlock
#   dismiss_text: Ignore
#   action_confirm_action: lock.unlock
#   action_confirm_entity_id: lock.front_door
#
# Example 2: Water leak with automatic fallback
# service: script.actionable_notify
# data:
#   who: all
#   title: Water Leak Detected!
#   message: Water leak detected in the basement. Turn off water main?
#   show_confirm: true
#   show_dismiss: true
#   confirm_text: Turn Off Water
#   dismiss_text: Ignore
#   action_confirm_action: switch.turn_on
#   action_confirm_entity_id: switch.water_shutoff_valve
#   timeout_minutes: 3
#   timeout_action: switch.turn_on
#   timeout_entity_id: switch.water_shutoff_valve
#   resend_count: 2
#   resend_interval: 1
